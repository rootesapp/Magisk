name: Magisk Build Suu

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build on Magisk
    runs-on: ubuntu-latest

    steps:
      - name: Check out patches
        uses: actions/checkout@v1

      - name: Check out Magisk
        uses: actions/checkout@v1
        with:
          path: Magisk
          repository: topjohnwu/Magisk
          ref: 6066b5cf86703512451a021cf1aaf1a877530af7
          submodules: 'recursive'
          fetch-depth: 0

      - name: Check out libsu
        uses: actions/checkout@v1
        with:
          path: libsu
          repository: topjohnwu/libsu
          ref: 9aa478c054d8d53b66b4401cb60e7139d46ede49
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Python 3
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'

      - name: Set up GitHub env
        run: |
          ndk_ver=$(sed -n 's/^magisk.ondkVersion=//p' gradle.properties)
          echo ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT >> $GITHUB_ENV
          echo ONDK_VERSION=$ndk_ver >> $GITHUB_ENV

      - name: Set up NDK
        run: |
         
          python build.py ndk

      - name: Apply libsu Patches
        run: |
          git -C libsu-su2suu.diff

      - name: Build libsuu
        run: |
          cd libsu
          ./gradlew :core:build
          ./gradlew :service:build
          ./gradlew :nio:build

      - name: Copy libsuu libs
        run: |
          mkdir Magisk/app/libs
          cp libsu/nio/build/outputs/aar/nio-release.aar Magisk/app/libs/
          cp libsu/service/build/outputs/aar/service-release.aar Magisk/app/libs/
          cp libsu/core/build/outputs/aar/core-release.aar Magisk/app/libs/

      - name: Update Magisk Version
        run: |
          cp Magisk/config.prop.sample Magisk/config.prop
          sed -i s/version=string/version=25.2/g Magisk/config.prop
          curl -s https://android.googlesource.com/platform/build/+/refs/heads/master/target/product/security/testkey.x509.pem?format=TEXT | base64 -d > testkey.x509.pem
          curl -s https://android.googlesource.com/platform/build/+/refs/heads/master/target/product/security/testkey.pk8?format=TEXT | base64 -d > testkey.pk8
          openssl pkcs8 -in testkey.pk8 -inform DER -outform PEM -out testkey.priv.pem -nocrypt
          openssl pkcs12 -export -in testkey.x509.pem -inkey testkey.priv.pem -out testkey.pk12 -password pass:android -name androiddebugkey
          keytool -importkeystore -srckeystore testkey.pk12 -srcstoretype PKCS12 -srcstorepass android -alias androiddebugkey -deststoretype JKS -destkeystore Magisk/test.jks -deststorepass android
          sed -i s/outdir=string/outdir=out/g Magisk/config.prop
          sed -i s/keyStore=string/keyStore=test.jks/g Magisk/config.prop
          sed -i s/keyStorePass=string/keyStorePass=android/g Magisk/config.prop
          sed -i s/keyAlias=string/keyAlias=androiddebugkey/g Magisk/config.prop
          sed -i s/keyPass=string/keyPass=android/g Magisk/config.prop

      - name: Apply Magisk Patches
        run: |
          git -C Magisk apply ../patches/Magisk/Magisk-su2suu.diff
          git -C Magisk apply ../patches/Magisk/use-local-libsu.diff

      - name: Build Magisk
        run: |
          cd Magisk
          python build.py -vr all

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: Magisk.apk
          path: Magisk/out/app-release.apk

      - name: Apply Magisk test Patches
        run: |
          git -C Magisk apply ../patches/Magisk/patch_vivo_do_mount_check.diff
          #git -C Magisk apply ../patches/Magisk/mountbind2product.diff

      - name: Build Magisk test
        run: |
          cd Magisk
          python build.py -vr all

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: Magisk-test.apk
          path: Magisk/out/app-release.apk
